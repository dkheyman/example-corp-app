environments:
  - name: acceptance
    provider: ecs-fargate 
    discovery:
      provider: route53
      name: acceptance.imagetrends.local    
  - name: production
    provider: ecs-fargate     
    discovery:
      provider: route53
      name: production.imagetrends.local  

templates:
  mu-iam-service-imagetrends-ui-acceptance:
    Resources:
      EcsTaskRole:
        Properties:
          ManagedPolicyArns: 
            - arn:aws:iam::aws:policy/AmazonRekognitionReadOnlyAccess
            - arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess
            - arn:aws:iam::aws:policy/ComprehendReadOnly
          Policies:
          - PolicyName: upload-image
            PolicyDocument:
              Statement:
              - Effect: Allow
                Action:
                - s3:PutObject
                - s3:PutObjectAcl
                - s3:GetObject
                - s3:GetObjectAcl
                - s3:DeleteObject
                - s3:ListBucket
                Resource: '*'

service:
  name: imagetrends-ui
  dockerfile: ./Dockerfile
  healthEndpoint: /healthcheck.html
  port: 3000
  desiredCount: 2
  minSize: 1
  maxSize: 4
  cpu: 20
  memory: 1024
  pathPatterns:
  - /*
  environment:
    RAILS_ENV: "production"
    RAILS_MASTER_KEY: "cdf56d76316a62b4532137d4fbb7b1b5"
    DB_NAME: ${DatabaseName}
    DB_USER: ${DatabaseMasterUsername}
    DB_PASS: ${DatabaseMasterPassword}
    DB_HOST: ${DatabaseEndpointAddress}
    DB_PORT: ${DatabaseEndpointPort}
    IMAGE_UPLOAD_BUCKET: "test"

  pipeline:
      source:
        provider: GitHub
        repo: horsfieldsa/imagetrends
        branch: master
      build:
        disabled: false
      acceptance:
        disabled: false
        environment: acceptance
      production:
        disabled: true
        environment: production
  
  database:
    name: imagetrends
    engine: aurora
    engineMode: serverless
    minSize: 2
    maxSize: 4